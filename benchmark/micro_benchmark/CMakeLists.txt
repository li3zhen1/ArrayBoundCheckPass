set(BENCH_ARGS -c -emit-llvm -g -Xclang -disable-O0-optnone)

function(generate_ir name output)
  file(GLOB BENCH_SOURCE ${CMAKE_CURRENT_SOURCE_DIR}/${name}/*.c ${CMAKE_CURRENT_SOURCE_DIR}/${name}/*.cpp)
  list(LENGTH BENCH_SOURCE SOURCE_NUM)
  if (NOT (SOURCE_NUM EQUAL "1"))
    message(FATAL_ERROR "Each micro-benchmark should have only one source file")
  endif()
  get_filename_component(SOURCE_EXT ${BENCH_SOURCE} EXT)
  if (SOURCE_EXT STREQUAL ".c")
    set(COMPILER ${CLANG_TOOL})
  else()
    set(COMPILER ${CLANGXX_TOOL})
  endif()
  add_custom_command(OUTPUT ${output} COMMAND ${COMPILER} ${BENCH_ARGS} ${BENCH_SOURCE} -o ${output} DEPENDS ${BENCH_SOURCE})
endfunction() 

set(MICRO_BENCHMARKS "static_1d_array;global_1d_array;malloc_1d_array;check_elimination;check_modification")

foreach(BENCH IN LISTS MICRO_BENCHMARKS)
  set(OUTPUT "${BENCH}.bc")
  list(APPEND BENCH_LIST ${OUTPUT})
  generate_ir(${BENCH} ${OUTPUT})
  install(FILES ${CMAKE_CURRENT_BINARY_DIR}/${OUTPUT} DESTINATION benchmark/micro_benchmark)
  endforeach()
add_custom_target(GEN_MICRO_BENCH ALL DEPENDS ${BENCH_LIST} COMMENT "Build micro-benchmarks")